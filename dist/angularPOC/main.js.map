{"version":3,"sources":["./src/app/shared/dropdown.directive.ts","./src/app/shared/ingredient.model.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/app.module.ts","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipe.model.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/shopping-list/shopping-list.service.ts","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/app-routing.module.ts","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;;AAK1E,MAAM,iBAAiB;IAC5B,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAEV,WAAM,GAAG,KAAK,CAAC;IAFH,CAAC;IAIxC,wCAAwC;IACxC,gCAAgC;IAChC,IAAI;IACwC,UAAU,CAAC,KAAY;QACjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;IACvF,CAAC;;kFAVU,iBAAiB;iGAAjB,iBAAiB;+IAAjB,sBAAkB;;;;6FAAlB,iBAAiB;cAH7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;aAC1B;wGAI4B,MAAM;kBAAhC,yDAAW;mBAAC,YAAY;YAKmB,UAAU;kBAArD,0DAAY;mBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;ACb5C;AAAA;AAAO,MAAM,UAAU;IACnB,YAAmB,IAAY,EAAS,MAAc;QAAnC,SAAI,GAAJ,IAAI,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;CAC5D;;;;;;;;;;;;;ACFD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICItC,yEAA8D;;;IAC9D,+EAAiF;;ADEtF,MAAM,YAAY;IALzB;QAME,kBAAa,GAAY,QAAQ,CAAC;KAQnC;IANC,QAAQ;IAER,CAAC;IACD,UAAU,CAAC,OAAO;QAChB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;IAC/B,CAAC;;wEARU,YAAY;4FAAZ,YAAY;QCPzB,gFAAmD;QAAvC,kKAAmB,sBAAkB,IAAC;QAAC,4DAAa;QAChE,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wHAA8D;QAC9D,oIAAiF;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAJoB,0DAAgC;QAAhC,gGAAgC;QAC1B,0DAAuC;QAAvC,uGAAuC;;6FDE1D,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAA+E;;;AAOxE,MAAM,mBAAmB;IAK9B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAFtC,mBAAc,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAEA,CAAC;IAErD,QAAQ;QACN,2CAA2C;IAC7C,CAAC;IAED,QAAQ;QACN,8BAA8B;QAC9B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtD,CAAC;;sFAdU,mBAAmB;mGAAnB,mBAAmB;QCRhC,uEACI;QADyC,sIAAS,cAAU,IAAC;QAC7D,yEACI;QAAA,wEAAoC;QAAA,uDAAe;QAAA,4DAAK;QACxD,uEAAgC;QAAA,uDAAsB;QAAA,4DAAI;QAC9D,4DAAM;QACN,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAI;;QANwC,0DAAe;QAAf,gFAAe;QACnB,0DAAsB;QAAtB,uFAAsB;QAGxB,0DAAqB;QAArB,2FAAqB;QAA9C,kJAAwB;;6FDExB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;6GAGkB,MAAM;kBAAtB,mDAAK;mBAAC,QAAQ;YACL,cAAc;kBAAvB,oDAAM;;;;;;;;;;;;;;AEXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACkC;;;;;;AAQxF,MAAM,qBAAqB;IAMhC,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAI,CAAC;IAGjE,QAAQ;IACR,CAAC;IACD,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;QACtD,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC;QAC1D,MAAM,aAAa,GAAG,IAAI,mEAAU,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACzD,4CAA4C;QAC5C,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;IAEhE,CAAC;;0FAlBU,qBAAqB;qGAArB,qBAAqB;;;;;;;;QCTlC,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,yEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,4EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,0EACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,8EAAoE;QAAtB,8IAAS,eAAW,IAAC;QAAC,+DAAG;QAAA,4DAAS;QAChF,8EAA6C;QAAA,kEAAM;QAAA,4DAAS;QAC5D,8EAA8C;QAAA,iEAAK;QAAA,4DAAS;QAChE,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;6FDbO,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;0HAGyB,YAAY;kBAAnC,uDAAS;mBAAC,WAAW;YACI,cAAc;kBAAvC,uDAAS;mBAAC,aAAa;;;;;;;;;;;;;;AEZ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACJ;AACiB;AACG;AACmB;AACY;AACd;AACc;AACN;AACxB;;AAsBzD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,wEAAe;QACf,2EAAgB;QAChB,8FAAmB;QACnB,0GAAmB;QACnB,4FAAqB;QACrB,2GAAqB;QACrB,qGAAqB;QACrB,6EAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;6FAKF,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,2EAAgB;oBAChB,8FAAmB;oBACnB,0GAAmB;oBACnB,4FAAqB;oBACrB,2GAAqB;oBACrB,qGAAqB;oBACrB,6EAAiB;iBAChB;gBACH,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACD;AACjB;;;AAKjC,MAAM,aAAa;IAExB,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;QAElD,mBAAc,GAAI,IAAI,0DAAY,EAAU;QAEpC,YAAO,GAAa;YAC1B,IAAI,oDAAM,CAAE,QAAQ,EAAE,cAAc,EAAE,wEAAwE,EAC7G;gBACE,IAAI,mEAAU,CAAC,MAAM,EAAC,CAAC,CAAC;gBACxB,IAAI,mEAAU,CAAC,aAAa,EAAC,EAAE,CAAC;aACjC,CAAE;YAEJ,IAAI,oDAAM,CAAE,OAAO,EAAE,cAAc,EAAE,wHAAwH,EAC5J;gBACE,IAAI,mEAAU,CAAC,MAAM,EAAE,EAAE,CAAC;gBAC1B,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;aAC1B,CAAC;SACJ,CAAC;IAhBoD,CAAC;IAkBvD,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,4BAA4B,CAAC,WAAwB;QACnD,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAEhD,CAAC;;0EA3BU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;;;;;;;;;;GAUG;AAGI,MAAM,MAAM;IACf,YAAoB,IAAY,EACb,WAAmB,EACnB,SAAiB,EACjB,WAAyB;QAHxB,SAAI,GAAJ,IAAI,CAAQ;QACb,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAQ;QACjB,gBAAW,GAAX,WAAW,CAAc;IAAE,CAAC;CAClD;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;;;ICI1D,sEAAgE;;;ADGvE,MAAM,eAAe;IAK1B;QAJA,cAAS,GAAG,IAAI,CAAC;QAEP,oBAAe,GAAG,IAAI,0DAAY,EAAU,CAAC;IAEvC,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,OAAe;QACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;;8EAZU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,4EACE;QAD0C,yKAAgC;QAC1E,6GAAgE;QAClE,4DAAS;QACT,uEAAuC;QAAA,sEAAW;QAAA,4DAAI;QACxD,4DAAM;QACN,yEACE;QADwD,sJAA6B,IAAI,0EAAC;QAC1F,wEACI;QAAA,qEAAI;QAAA,wEAAyC;QAA7B,mIAAS,aAAS,QAAQ,CAAC,IAAC;QAAC,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QAC7D,sEAAI;QAAA,wEAAgD;QAApC,mIAAS,aAAS,eAAe,CAAC,IAAC;QAAC,yEAAa;QAAA,4DAAI;QAAA,4DAAK;QAC9E,4DAAK;QACL,yEACI;QAAA,0EACI;QAAA,yEAAkD;QAAA,mEAAO;QAAA,uEAA2B;QAAA,4DAAI;QACxF,0EACI;QAAA,sEAAI;QAAA,yEAAY;QAAA,qEAAS;QAAA,4DAAI;QAAA,4DAAK;QAClC,sEAAI;QAAA,yEAAY;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAK;QACvC,4DAAK;QACT,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;QApBmD,0DAAY;QAAZ,0IAAY;QAI9B,0DAA4B;QAA5B,oFAA4B;;6FDDtD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;sCAIW,eAAe;kBAAxB,oDAAM;;;;;;;;;;;;;;AETT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICI1C,kFAGqB;;;IADrB,yFAAyB;;;IAGrB,oEAAG;IAAA,gFAAqB;IAAA,4DAAI;;ADDjC,MAAM,gBAAgB;IAG3B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC,MAAa,EAAE,EAAE;YAC7D,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QCT7B,yEACI;QAAA,yEACI;QAAA,6EAAmC;QACvC,4DAAM;QACN,yEACI;QAAA,wIAGqB;QACrB,wMAEc;QAClB,4DAAM;QACV,4DAAM;;;QAPG,0DAAsB;QAAtB,oFAAsB;;6FDGlB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAyD;AACD;;AAKjD,MAAM,mBAAmB;IAS9B;QAPA,uBAAkB,GAAG,IAAI,0DAAY,EAAgB,CAAC;QAEtD,gBAAW,GAAiB;YAC1B,IAAI,mEAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3B,IAAI,mEAAU,CAAC,UAAU,EAAE,EAAE,CAAC;SAC/B,CAAC;IAEc,CAAC;IAEjB,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,qBAAqB,CAAC,IAAgB;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IACzD,CAAC;IACD,iBAAiB,CAAC,WAAwB;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IACzD,CAAC;;sFAtBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;;;ICQhE,gFAGmB;;;IAFf,+EAAmB;;ADDxB,MAAM,mBAAmB;IAI9B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC;;sFARU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEACI;QAAA,yEACI;QAAA,yEAA6B;QAAA,qEAAU;QAAA,4DAAM;QACjD,4DAAM;QACV,4DAAM;QACN,gEACA;QAAA,yEACI;QAAA,yEAEI;QAAA,uIAGmB;QACvB,4DAAM;QACV,4DAAM;;QAH2B,0DAAU;QAAV,gFAAU;;6FDF9B,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICGtC,uEAGA;IAAA,uDACA;IAAA,4DAAI;;;IADJ,0DACA;IADA,2HACA;;ADAL,MAAM,qBAAqB;IAIhC,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAI,CAAC;IAEjE,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;QAC7D,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,SAAS,CAAE,CAAC,WAAyB,EAAE,EAAE;YACnF,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;;0FAXU,qBAAqB;qGAArB,qBAAqB;QCTlC,yEACI;QAAA,yEACI;QAAA,+EAAuC;QACvC,gEACA;QAAA,wEACI;QAAA,6GAII;QACR,4DAAK;QACT,4DAAM;QACV,4DAAM;;QAPgC,0DAAc;QAAd,oFAAc;;6FDIvC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;IC0B7C,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,2HACJ;;ADrBL,MAAM,qBAAqB;IAIhC,YAAoB,aAA4B,EAAU,SAA8B;QAApE,kBAAa,GAAb,aAAa,CAAe;QAAU,cAAS,GAAT,SAAS,CAAqB;IAAI,CAAC;IAE7F,QAAQ;IACR,CAAC;IAED,mBAAmB;QACnB,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACzE,kKAAkK;IAClK,CAAC;;0FAZU,qBAAqB;qGAArB,qBAAqB;QCVlC,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,qEAAK;QAAA,uDAAe;QAAA,4DAAK;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,6EAAgE;QAAA,2EAAc;QAAA,sEAA2B;QAAA,4DAAS;QAClH,yEACI;QAAA,sEAAI;QAAA,wEAA4D;QAAzD,yIAAS,yBAAqB,IAAC;QAA0B,yEAAa;QAAA,4DAAI;QAAA,4DAAK;QACtF,sEAAI;QAAA,wEAAY;QAAA,wEAAY;QAAA,4DAAI;QAAA,4DAAK;QACzC,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,wDACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,yEACI;QAAA,kHAEK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;;QAhCO,0DAAwB;QAAxB,kJAAwB;QAKxB,0DAAe;QAAf,0FAAe;QAgBpB,2DACJ;QADI,kGACJ;QAK2D,0DAAqB;QAArB,2FAAqB;;6FDnBvE,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;iNAGU,MAAM;kBAAd,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Directive, HostListener, HostBinding, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n  constructor(private elRef: ElementRef){}\n\n  @HostBinding(\"class.open\") isOpen = false;\n\n  // @HostListener('click') toggelClass(){\n  //   this.isOpen = !this.isOpen;\n  // }\n  @HostListener('document:click', ['$event']) toggleOpen(event: Event) {\n    this.isOpen = this.elRef.nativeElement.contains(event.target) ? !this.isOpen : false;\n  }\n}\n","export class Ingredient{\r\n    constructor(public name: string, public amount: number){}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  implements OnInit{\n  loadedFeature : string = 'recipe';\n\n  ngOnInit(){\n   \n  }\n  onNavigate(feature){\n    this.loadedFeature = feature;\n  }\n}\n","<app-header (featureSelected)=\"onNavigate($event)\"></app-header>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <app-recipes *ngIf=\"loadedFeature === 'recipe'\"></app-recipes>\r\n            <app-shopping-list *ngIf=\"loadedFeature === 'Shopping-list'\"></app-shopping-list>\r\n        </div>\r\n    </div>\r\n</div>","import { RecipeService } from './../../recipe.service';\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n\n  @Input('recipe') recipe;\n  @Output() recipeSelected = new EventEmitter<void>();\n\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    // console.log(JSON.stringify(this.recipe))\n  }\n\n  onSelect(){\n    // this.recipeSelected.emit();\n    this.recipeService.recipseSelcted.emit(this.recipe);\n  }\n\n}\n","<a href=\"#\" class=\"list-group-item clearfix\" (click)=\"onSelect()\">\n    <div class=\"pull-left\">\n        <h4 class=\"list-group-item-heading\">{{recipe.name}}</h4>\n        <p class=\"list-group-item-text\">{{recipe.description}}</p>\n    </div>\n    <div class=\"pull-right\">\n        <img [src]=\"recipe.imagePath\" alt=\"{{recipe.name}}\" class=\"img-responsive\" style=\"max-height:50px\">\n    </div>\n</a>","import { Ingredient } from './../../shared/ingredient.model';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport {ShoppingListService} from '../shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit {\n\n  @ViewChild('nameInput') nameInputRef: ElementRef;\n  @ViewChild('amountInput') amountInputRef: ElementRef;\n\n\n  constructor(private ShoppingListService: ShoppingListService) { }\n\n\n  ngOnInit(): void {\n  }\n  onAdditem(){\n    const ingName = this.nameInputRef.nativeElement.value;\n    const ingAmount = this.amountInputRef.nativeElement.value;\n    const newIngredient = new Ingredient(ingName, ingAmount);\n    // this.ingredientAdded.emit(newIngredient);\n    this.ShoppingListService.addIngredientoneByOne(newIngredient);\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form>\n            <div class=\"row\">\n                <div class=\"col-sm-5 form-group\">\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" id=\"name\" class=\"form-control\" #nameInput>\n                </div>\n                <div class=\"col-sm-2\">\n                    <label for=\"amount\">Amount</label>\n                    <input type=\"number\" id=\"amount\" class=\"form-control\" #amountInput>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12 btn-spacer\">\n                    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onAdditem()\">Add</button>\n                    <button class=\"btn btn-danger\" type=\"button\">Delete</button>\n                    <button class=\"btn btn-primary\" type=\"button\">Clear</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { DropdownDirective } from './shared/dropdown.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeItemComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    RecipeDetailComponent,\n    DropdownDirective\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ShoppingListService } from './../shopping-list/shopping-list.service';\nimport { Ingredient } from './../shared/ingredient.model';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Recipe } from './recipe.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  constructor(private slService: ShoppingListService) { }\n\n  recipseSelcted  = new EventEmitter<Recipe>()\n\n  private recipes: Recipe[] = [\n    new Recipe( 'Kiddle', 'Chicken Soup', 'https://cdn.pixabay.com/photo/2018/12/22/16/36/recipe-3889916_1280.jpg',\n     [\n       new Ingredient('meat',5),\n       new Ingredient('frech fries',22)\n     ] ),\n\n    new Recipe( 'Maven', 'Pizza burger', 'https://images.immediate.co.uk/production/volatile/sites/30/2020/08/chorizo-mozarella-gnocchi-bake-cropped-9ab73a3.jpg',\n     [\n       new Ingredient('Buns', 35),\n       new Ingredient('Meat', 1)\n     ])\n  ];\n\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  addIngredientstoShoppingList(ingredients:Ingredient[]){\n    this.slService.addAllIngredients(ingredients);\n\n  }\n\n\n\n}\n","import { Ingredient } from \"../shared/ingredient.model\";\r\n\r\n/* export class Recipe{\r\n    public name : string;\r\n    public description: string;\r\n    public imagePath: string;\r\n\r\n    constructor(name: string, desc: string, imagePath: string){\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.imagePath = imagePath;\r\n    }\r\n}*/\r\n\r\n\r\nexport class Recipe{\r\n    constructor( public name: string,\r\n                public description: string, \r\n                public imagePath: string,\r\n                public ingredients: Ingredient[]){}\r\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  collapsed = true;\n  \n  @Output() featureSelected = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSelect(feature: string){\n    this.featureSelected.emit(feature);\n  }\n\n}\n","<div class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle\" (click)=\"collapsed = !collapsed\">\n              <span class=\"icon-bar\" *ngFor=\"let iconBar of [1, 2, 3]\"></span>\n            </button>\n            <a routerLink=\"/\" class=\"navbar-brand\">Recipe Book</a>\n          </div>\n          <div class=\"navbar-collapse\" [class.collapse]=\"collapsed\" (window:resize)=\"collapsed = true\">\n            <ul class=\"nav navbar-nav\">\n                <li><a href=\"#\" (click)=\"onSelect('recipe')\">Recipes</a></li>\n                <li><a href=\"#\" (click)=\"onSelect('Shopping-list')\">Shopping list</a></li>\n            </ul>\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li class=\"dropdown\" appDropdown>\n                    <a href=\"#\" class=\"dropdown-toggle\" role=\"button\">Manage <span class=\"caret\"></span></a>\n                    <ul class=\"dropdown-menu\">\n                        <li><a href=\"#\">Save Data</a></li>\n                        <li><a href=\"#\">Fetch Data</a></li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Recipe } from './recipe.model';\nimport { Component, OnInit } from '@angular/core';\nimport { RecipeService } from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  selectedRecipe: Recipe;\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.recipeService.recipseSelcted.subscribe( (recipe:Recipe) =>{\n      this.selectedRecipe = recipe;\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-recipe-list></app-recipe-list>\n    </div>\n    <div class=\"col-md-7\">\n        <app-recipe-detail\n        *ngIf=\"selectedRecipe; else infoText\"\n        [recipe]=\"selectedRecipe\"\n        ></app-recipe-detail>\n        <ng-template #infoText>\n            <p>Please select Recipe!</p>\n        </ng-template>\n    </div>\n</div>","import { Injectable, EventEmitter } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingListService {\n\n  ingredientsChanged = new EventEmitter<Ingredient[]>();\n\n  ingredients: Ingredient[] = [\n    new Ingredient('Apples', 5),\n    new Ingredient('Totmotos', 10),\n  ];\n\n  constructor() { }\n\n  getIngredients(){\n    return this.ingredients.slice();\n  }\n\n  addIngredientoneByOne(item: Ingredient){\n    this.ingredients.push(item);\n    this.ingredientsChanged.emit(this.ingredients.slice());\n  }\n  addAllIngredients(ingredients:Ingredient[]){\n    this.ingredients.push(...ingredients);\n    this.ingredientsChanged.emit(this.ingredients.slice());\n  }\n\n}\n","import { Recipe } from './../recipe.model';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\n\n  recipes: Recipe[];\n\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  \n\n}\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <div class=\"btn btn-success\">New Recipe</div>\r\n    </div>\r\n</div>\r\n<hr>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        \r\n        <app-recipe-item \r\n            [recipe]=\"recipeEl\"\r\n            *ngFor=\"let recipeEl of recipes\"\r\n        ></app-recipe-item>\r\n    </div>\r\n</div>","import { ShoppingListService } from './shopping-list.service';\nimport { Ingredient } from './../shared/ingredient.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit {\n\n  ingredients: Ingredient[];\n\n  constructor(private ShoppingListService: ShoppingListService) { }\n\n  ngOnInit(): void {\n    this.ingredients = this.ShoppingListService.getIngredients();\n    this.ShoppingListService.ingredientsChanged.subscribe( (ingredients: Ingredient[]) =>{\n      this.ingredients = ingredients;\n    })\n  }\n  \n}\n","<div class=\"row\">\n    <div class=\"col-xs-10\">\n        <app-shopping-edit></app-shopping-edit>\n        <hr>\n        <ul class=\"list-group\">\n            <a *ngFor=\"let ingredient of ingredients\"\n                class=\"list-group-item\" \n                style=\"cursor: pointer;\">\n            {{ingredient.name}} ({{ingredient.amount}})\n            </a>\n        </ul>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ShoppingListService } from './../../shopping-list/shopping-list.service';\nimport { RecipeService } from './../recipe.service';\nimport { Recipe } from './../recipe.model';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n\n  @Input() recipe: Recipe;\n\n  constructor(private recipeService: RecipeService, private slService: ShoppingListService) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddtoShoppingList(){\n  this.recipeService.addIngredientstoShoppingList(this.recipe.ingredients);\n  //  this.slService.addAllIngredients(this.recipe.ingredients); // we can do it by calling directly shopping service also instead of going through recipe service  \n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <img [src]=\"recipe.imagePath\" alt=\"\" class=\"img-responsive\" style=\"max-height:300px;\">\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h1> {{recipe.name}}</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div class=\"btn-group\" appDropdown>\n            <button type=\"button\"  class=\"btn btn-primary dropdown-toggle\"> Manage Recipe <span class=\"caret\"></span></button>\n            <ul class=\"dropdown-menu\">\n                <li><a (click)=\"onAddtoShoppingList()\" style=\"cursor: pointer;\">Shopping list</a></li>\n                <li><a href=\"#\">Delete Recpe</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        {{recipe.description}}\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" *ngFor=\"let ingredient of recipe.ingredients\">\n                {{ingredient.name}} | {{ingredient.amount}}\n            </li>\n        </ul>\n    </div>\n</div> ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}